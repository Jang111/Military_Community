{"ast":null,"code":"import React,{useState}from'react';import{Link}from\"react-router-dom\";import Modal from'react-modal';import'./PWDModal.css';import Update from\"./Update\";import{useNavigate}from\"react-router-dom\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";const PWDModal=props=>{const[writer,setWriter]=useState(\"\");const[password,setPassword]=useState(\"\");const[Hpassword,setHpassword]=useState(\"\");// 암호화된 비밀번호값 저장\nconst crypto=require(\"crypto\");const navigate=useNavigate();// 다른 페이지로 데이터를 전달하기 위한 함수\nconst upDate=(writer,password)=>{setHpassword(crypto.createHmac(\"sha256\",\"milihelper_key\").update(password).digest(\"hex\"));// createHmac의 두번째 인자값이 키인데 그것을 같게 작성하면 결과값도 항상 같게 나옴.\n// console.log(props.password);\nif(writer===props.writer&&Hpassword===props.password){//password : 입력받은 password, props.password : 기존 password\n//해야할 것 : 입력받은 password 복호화하여 기존 비번과 일치하는지 검사 후 수정 컴포넌트로 이동\nconsole.log(\"success\");navigate(\"/Update\",{state:{writ:writer,title:props.title,content:props.content,id:props.id}// /Detail 페이지로 전송할 데이터\n});window.location.href=\"/Update\";}else{alert(\"정보가 올바르지 않습니다.\");}};return/*#__PURE__*/_jsx(Modal,{className:\"modal\",isOpen:props.modal_is_open,ariaHideApp:false,children:/*#__PURE__*/_jsx(\"div\",{style:{height:\"100%\"},children:/*#__PURE__*/_jsxs(\"div\",{className:\"buttonDiv\",children:[/*#__PURE__*/_jsx(\"input\",{placeholder:\"writer\",onChange:e=>{setWriter(e.target.value);},style:{padding:6,marginTop:6,width:200,fontSize:20,resize:\"none\",marginRight:20,borderRadius:5}}),/*#__PURE__*/_jsx(\"input\",{placeholder:\"password\",type:\"password\",onChange:e=>{setPassword(e.target.value);},style:{padding:6,width:200,fontSize:20,resize:\"none\",borderRadius:4}}),/*#__PURE__*/_jsx(\"button\",{className:\"goodButton\",onClick:()=>{upDate(writer,password);},children:\"\\uC785\\uB825\"}),/*#__PURE__*/_jsx(\"button\",{className:\"badButton\",onClick:()=>props.setModalIsOpen(false),children:\"\\uB2EB\\uAE30\"})]})})});};export default PWDModal;","map":{"version":3,"names":["React","useState","Link","Modal","Update","useNavigate","jsx","_jsx","jsxs","_jsxs","PWDModal","props","writer","setWriter","password","setPassword","Hpassword","setHpassword","crypto","require","navigate","upDate","createHmac","update","digest","console","log","state","writ","title","content","id","window","location","href","alert","className","isOpen","modal_is_open","ariaHideApp","children","style","height","placeholder","onChange","e","target","value","padding","marginTop","width","fontSize","resize","marginRight","borderRadius","type","onClick","setModalIsOpen"],"sources":["C:/Users/jangty/Desktop/miliHelper/Military_Community/vs_workspace/community/src/pages/PWDModal.js"],"sourcesContent":["import React, {useState} from 'react';\r\nimport {Link} from \"react-router-dom\";\r\nimport Modal from 'react-modal';\r\nimport './PWDModal.css';\r\nimport Update from \"./Update\";\r\nimport {useNavigate} from \"react-router-dom\";\r\n\r\nconst PWDModal = (props)=>{\r\n    const [writer, setWriter] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [Hpassword, setHpassword] = useState(\"\"); // 암호화된 비밀번호값 저장\r\n\r\n    const crypto = require(\"crypto\");\r\n\r\n    const navigate = useNavigate(); // 다른 페이지로 데이터를 전달하기 위한 함수\r\n\r\n    const upDate = (writer,password)=>{\r\n        setHpassword(crypto.createHmac(\"sha256\", \"milihelper_key\").update(password).digest(\"hex\")); // createHmac의 두번째 인자값이 키인데 그것을 같게 작성하면 결과값도 항상 같게 나옴.\r\n        // console.log(props.password);\r\n        if(writer === props.writer && Hpassword === props.password){\r\n            //password : 입력받은 password, props.password : 기존 password\r\n            //해야할 것 : 입력받은 password 복호화하여 기존 비번과 일치하는지 검사 후 수정 컴포넌트로 이동\r\n            console.log(\"success\");\r\n            navigate(\"/Update\", {\r\n                state:{\r\n                    writ:writer,\r\n                    title : props.title,\r\n                    content: props.content,\r\n                    id : props.id\r\n                } // /Detail 페이지로 전송할 데이터\r\n            })\r\n            window.location.href = \"/Update\";\r\n        }else{\r\n            alert(\"정보가 올바르지 않습니다.\")\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Modal className = \"modal\" isOpen={props.modal_is_open} ariaHideApp = {false}>\r\n            <div style={{height:\"100%\"}}>\r\n                <div className = \"buttonDiv\">\r\n                    <input \r\n                    placeholder=\"writer\"\r\n                    onChange={(e)=>{setWriter(e.target.value)}}\r\n                    style={{\r\n                        padding:6,\r\n                        marginTop:6,\r\n                        width:200,\r\n                        fontSize:20,\r\n                        resize:\"none\",\r\n                        marginRight:20,\r\n                        borderRadius:5,\r\n                    }}\r\n                    />\r\n                    <input \r\n                    placeholder=\"password\"\r\n                    type=\"password\"\r\n                    onChange={(e)=>{setPassword(e.target.value)}}\r\n                    style={{\r\n                        padding:6,\r\n                        width:200,\r\n                        fontSize:20,\r\n                        resize:\"none\",\r\n                        borderRadius:4,\r\n                        \r\n                    }}\r\n                    />\r\n                    <button className=\"goodButton\" onClick={()=>{upDate(writer, password)}}>입력</button>\r\n                    <button className=\"badButton\" onClick={()=>props.setModalIsOpen(false)}>닫기</button>\r\n                </div>\r\n            </div>\r\n        </Modal>\r\n    )\r\n}\r\n\r\nexport default PWDModal"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}