{"ast":null,"code":"import React,{useState}from'react';import{Link}from\"react-router-dom\";import Modal from'react-modal';import'./PWDModal_DEL.css';import Update from\"./Update\";import{useNavigate}from\"react-router-dom\";import axios from\"axios\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";const PWDModal_DEL=props=>{const[writer,setWriter]=useState(\"\");const[password,setPassword]=useState(\"\");const[Hpassword,setHpassword]=useState(\"\");// 암호화된 비밀번호값 저장\nconst crypto=require(\"crypto\");const navigate=useNavigate();// 다른 페이지로 데이터를 전달하기 위한 함수\nconst Delete=(writer,password)=>{setHpassword(crypto.createHmac(\"sha256\",\"milihelper_key\").update(password).digest(\"hex\"));// createHmac의 두번째 인자값이 키인데 그것을 같게 작성하면 결과값도 항상 같게 나옴.\n// console.log(props.password);\nif(writer===props.writer&&Hpassword===props.password){//Hpassword : 입력받은 password를 해시를 통해 암호화 한것, props.password : 기존 password\nif(window.confirm(\"한번 삭제하면 복구할 수 없습니다.\\n 그래도 삭제하시겠습니까?\")){// 삭제할 것인지 확인 창 띄움.\nconst header={\"Content-type\":\"application/json; charset = utf-8\",Accept:\"application/json\"};const datas={id:props.id};axios.post(\"http://localhost:8000/delete/\",datas,{header}).then(response=>{const res=response.data;if(res.responseCode){alert(res.message);window.location.href=\"/Community\";}});window.location.href=\"/Community\";}else{return false;}}else{alert(\"정보가 올바르지 않습니다.\");}};return/*#__PURE__*/_jsx(Modal,{className:\"modal\",isOpen:props.modal_is_open,ariaHideApp:false,children:/*#__PURE__*/_jsx(\"div\",{style:{height:\"100%\"},children:/*#__PURE__*/_jsxs(\"div\",{className:\"buttonDiv\",children:[/*#__PURE__*/_jsx(\"input\",{placeholder:\"writer\",onChange:e=>{setWriter(e.target.value);},style:{padding:6,marginTop:6,width:200,fontSize:20,resize:\"none\",marginRight:20,borderRadius:5}}),/*#__PURE__*/_jsx(\"input\",{placeholder:\"password\",type:\"password\",onChange:e=>{setPassword(e.target.value);},style:{padding:6,width:200,fontSize:20,resize:\"none\",borderRadius:4}}),/*#__PURE__*/_jsx(\"button\",{className:\"goodButton\",onClick:()=>{Delete(writer,password);},children:\"\\uC785\\uB825\"}),/*#__PURE__*/_jsx(\"button\",{className:\"badButton\",onClick:()=>props.setModalIsOpen(false),children:\"\\uB2EB\\uAE30\"})]})})});};export default PWDModal_DEL;","map":{"version":3,"names":["React","useState","Link","Modal","Update","useNavigate","axios","jsx","_jsx","jsxs","_jsxs","PWDModal_DEL","props","writer","setWriter","password","setPassword","Hpassword","setHpassword","crypto","require","navigate","Delete","createHmac","update","digest","window","confirm","header","Accept","datas","id","post","then","response","res","data","responseCode","alert","message","location","href","className","isOpen","modal_is_open","ariaHideApp","children","style","height","placeholder","onChange","e","target","value","padding","marginTop","width","fontSize","resize","marginRight","borderRadius","type","onClick","setModalIsOpen"],"sources":["C:/Users/jangty/Desktop/miliHelper/Military_Community/vs_workspace/community/src/pages/PWDModal_DEL.js"],"sourcesContent":["import React, {useState} from 'react';\r\nimport {Link} from \"react-router-dom\";\r\nimport Modal from 'react-modal';\r\nimport './PWDModal_DEL.css';\r\nimport Update from \"./Update\";\r\nimport {useNavigate} from \"react-router-dom\";\r\nimport axios from \"axios\";\r\n\r\nconst PWDModal_DEL = (props)=>{\r\n    const [writer, setWriter] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [Hpassword, setHpassword] = useState(\"\"); // 암호화된 비밀번호값 저장\r\n\r\n    const crypto = require(\"crypto\");\r\n\r\n    const navigate = useNavigate(); // 다른 페이지로 데이터를 전달하기 위한 함수\r\n\r\n    const Delete = (writer,password)=>{\r\n        setHpassword(crypto.createHmac(\"sha256\", \"milihelper_key\").update(password).digest(\"hex\")); // createHmac의 두번째 인자값이 키인데 그것을 같게 작성하면 결과값도 항상 같게 나옴.\r\n        // console.log(props.password);\r\n        if(writer === props.writer && Hpassword === props.password){\r\n            //Hpassword : 입력받은 password를 해시를 통해 암호화 한것, props.password : 기존 password\r\n            if(window.confirm(\"한번 삭제하면 복구할 수 없습니다.\\n 그래도 삭제하시겠습니까?\")){ // 삭제할 것인지 확인 창 띄움.\r\n\r\n                const header = {\r\n                    \"Content-type\" : \"application/json; charset = utf-8\",\r\n                    Accept : \"application/json\"\r\n                }\r\n                const datas = {\r\n                    id : props.id\r\n                }\r\n                axios.post(\"http://localhost:8000/delete/\", datas, {\r\n                    header,\r\n                }).then((response)=>{\r\n                    const res = response.data;\r\n                    if (res.responseCode){\r\n                        alert(res.message)\r\n                        window.location.href = \"/Community\";\r\n                    }\r\n                })\r\n                window.location.href = \"/Community\";\r\n                }\r\n                else{\r\n                    return false;\r\n                }\r\n        }else{\r\n            alert(\"정보가 올바르지 않습니다.\")\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Modal className = \"modal\" isOpen={props.modal_is_open} ariaHideApp = {false}>\r\n            <div style={{height:\"100%\"}}>\r\n                <div className = \"buttonDiv\">\r\n                    <input \r\n                    placeholder=\"writer\"\r\n                    onChange={(e)=>{setWriter(e.target.value)}}\r\n                    style={{\r\n                        padding:6,\r\n                        marginTop:6,\r\n                        width:200,\r\n                        fontSize:20,\r\n                        resize:\"none\",\r\n                        marginRight:20,\r\n                        borderRadius:5,\r\n                    }}\r\n                    />\r\n                    <input \r\n                    placeholder=\"password\"\r\n                    type=\"password\"\r\n                    onChange={(e)=>{setPassword(e.target.value)}}\r\n                    style={{\r\n                        padding:6,\r\n                        width:200,\r\n                        fontSize:20,\r\n                        resize:\"none\",\r\n                        borderRadius:4,\r\n                        \r\n                    }}\r\n                    />\r\n                    <button className=\"goodButton\" onClick={()=>{Delete(writer, password)}}>입력</button>\r\n                    <button className=\"badButton\" onClick={()=>props.setModalIsOpen(false)}>닫기</button>\r\n                </div>\r\n            </div>\r\n        </Modal>\r\n    )\r\n}\r\n\r\nexport default PWDModal_DEL"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}