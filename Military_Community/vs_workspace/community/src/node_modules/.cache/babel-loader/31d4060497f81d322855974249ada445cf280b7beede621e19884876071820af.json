{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jangty\\\\Desktop\\\\miliHelper\\\\Military_Community\\\\vs_workspace\\\\community\\\\src\\\\pages\\\\PWDModal.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Link } from \"react-router-dom\";\nimport Modal from 'react-modal';\nimport './PWDModal.css';\nimport Update from \"./Update\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PWDModal = props => {\n  _s();\n  const [writer, setWriter] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [Hpassword, setHpassword] = useState(\"\"); // 암호화된 비밀번호값 저장\n\n  const crypto = require(\"crypto\");\n  const navigate = useNavigate(); // 다른 페이지로 데이터를 전달하기 위한 함수\n\n  const upDate = (writer, password) => {\n    setHpassword(crypto.createHmac(\"sha256\", \"milihelper_key\").update(password).digest(\"hex\")); // createHmac의 두번째 인자값이 키인데 그것을 같게 작성하면 결과값도 항상 같게 나옴.\n    // console.log(props.password);\n    if (writer === props.writer && Hpassword === props.password) {\n      //password : 입력받은 password, props.password : 기존 password\n      //해야할 것 : 입력받은 password 복호화하여 기존 비번과 일치하는지 검사 후 수정 컴포넌트로 이동\n      console.log(\"success\");\n      navigate(\"/Update\", {\n        state: {\n          writ: writer,\n          title: props.title,\n          content: props.content,\n          id: props.id\n        } // /Detail 페이지로 전송할 데이터\n      });\n      window.location.href = \"/Update\";\n    } else {\n      alert(\"정보가 올바르지 않습니다.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    className: \"modal\",\n    isOpen: props.modal_is_open,\n    ariaHideApp: false,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        height: \"100%\"\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"buttonDiv\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          placeholder: \"writer\",\n          onChange: e => {\n            setWriter(e.target.value);\n          },\n          style: {\n            padding: 6,\n            marginTop: 6,\n            width: 200,\n            fontSize: 20,\n            resize: \"none\",\n            marginRight: 20,\n            borderRadius: 5\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          placeholder: \"password\",\n          type: \"password\",\n          onChange: e => {\n            setPassword(e.target.value);\n          },\n          style: {\n            padding: 6,\n            width: 200,\n            fontSize: 20,\n            resize: \"none\",\n            borderRadius: 4\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"goodButton\",\n          onClick: () => {\n            upDate(writer, password);\n          },\n          children: \"\\uC785\\uB825\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"badButton\",\n          onClick: () => props.setModalIsOpen(false),\n          children: \"\\uB2EB\\uAE30\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this);\n};\n_s(PWDModal, \"4LElFLAKECU83J3KU5Yv8N7rvWA=\", false, function () {\n  return [useNavigate];\n});\n_c = PWDModal;\nexport default PWDModal;\nvar _c;\n$RefreshReg$(_c, \"PWDModal\");","map":{"version":3,"names":["React","useState","Link","Modal","Update","useNavigate","jsxDEV","_jsxDEV","PWDModal","props","_s","writer","setWriter","password","setPassword","Hpassword","setHpassword","crypto","require","navigate","upDate","createHmac","update","digest","console","log","state","writ","title","content","id","window","location","href","alert","className","isOpen","modal_is_open","ariaHideApp","children","style","height","placeholder","onChange","e","target","value","padding","marginTop","width","fontSize","resize","marginRight","borderRadius","fileName","_jsxFileName","lineNumber","columnNumber","type","onClick","setModalIsOpen","_c","$RefreshReg$"],"sources":["C:/Users/jangty/Desktop/miliHelper/Military_Community/vs_workspace/community/src/pages/PWDModal.js"],"sourcesContent":["import React, {useState} from 'react';\r\nimport {Link} from \"react-router-dom\";\r\nimport Modal from 'react-modal';\r\nimport './PWDModal.css';\r\nimport Update from \"./Update\";\r\nimport {useNavigate} from \"react-router-dom\";\r\n\r\nconst PWDModal = (props)=>{\r\n    const [writer, setWriter] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [Hpassword, setHpassword] = useState(\"\"); // 암호화된 비밀번호값 저장\r\n\r\n    const crypto = require(\"crypto\");\r\n\r\n    const navigate = useNavigate(); // 다른 페이지로 데이터를 전달하기 위한 함수\r\n\r\n    const upDate = (writer,password)=>{\r\n        setHpassword(crypto.createHmac(\"sha256\", \"milihelper_key\").update(password).digest(\"hex\")); // createHmac의 두번째 인자값이 키인데 그것을 같게 작성하면 결과값도 항상 같게 나옴.\r\n        // console.log(props.password);\r\n        if(writer === props.writer && Hpassword === props.password){\r\n            //password : 입력받은 password, props.password : 기존 password\r\n            //해야할 것 : 입력받은 password 복호화하여 기존 비번과 일치하는지 검사 후 수정 컴포넌트로 이동\r\n            console.log(\"success\");\r\n            navigate(\"/Update\", {\r\n                state:{\r\n                    writ:writer,\r\n                    title : props.title,\r\n                    content: props.content,\r\n                    id : props.id\r\n                } // /Detail 페이지로 전송할 데이터\r\n            })\r\n            window.location.href = \"/Update\";\r\n        }else{\r\n            alert(\"정보가 올바르지 않습니다.\")\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Modal className = \"modal\" isOpen={props.modal_is_open} ariaHideApp = {false}>\r\n            <div style={{height:\"100%\"}}>\r\n                <div className = \"buttonDiv\">\r\n                    <input \r\n                    placeholder=\"writer\"\r\n                    onChange={(e)=>{setWriter(e.target.value)}}\r\n                    style={{\r\n                        padding:6,\r\n                        marginTop:6,\r\n                        width:200,\r\n                        fontSize:20,\r\n                        resize:\"none\",\r\n                        marginRight:20,\r\n                        borderRadius:5,\r\n                    }}\r\n                    />\r\n                    <input \r\n                    placeholder=\"password\"\r\n                    type=\"password\"\r\n                    onChange={(e)=>{setPassword(e.target.value)}}\r\n                    style={{\r\n                        padding:6,\r\n                        width:200,\r\n                        fontSize:20,\r\n                        resize:\"none\",\r\n                        borderRadius:4,\r\n                        \r\n                    }}\r\n                    />\r\n                    <button className=\"goodButton\" onClick={()=>{upDate(writer, password)}}>입력</button>\r\n                    <button className=\"badButton\" onClick={()=>props.setModalIsOpen(false)}>닫기</button>\r\n                </div>\r\n            </div>\r\n        </Modal>\r\n    )\r\n}\r\n\r\nexport default PWDModal"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}